buildscript {
	repositories {
		maven { url "https://repo.spring.io/plugins-release" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.1.RELEASE")
	}
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'war'

sourceCompatibility = 1.8
targetCompatibility = 1.8
 
	
war {
    baseName = 'AppNotifierStructured'
} 	

repositories {
    mavenCentral()
}

configurations {
	//se excluye para Tomcat8. Comentar cuando se deploya en Tomcat 7
	compile.exclude module: 'log4j-over-slf4j'
    providedRuntime
}


dependencies {
			//boot-spring
			compile("org.springframework.boot:spring-boot-starter-web")	
	    
		    //Base de datos
		    compile("org.springframework:spring-context-support:$springVersion")
		    compile("org.springframework:spring-orm:$springVersion")
		    compile("org.hibernate:hibernate-core:$hibernateVersion")
		    
		    //Pool de conexiones 
		  	compile("org.hibernate:hibernate-c3p0:$hibernateVersion")
		   	compile("com.mchange:c3p0:0.9.5.1")	

			//Quartz con dependencia a c3p0-0.9.1.1
			compile("org.quartz-scheduler:quartz:2.2.3")
			
			//log4j
			compile("log4j:log4j:1.2.17")
			
			 //mail
		    compile("org.springframework.boot:spring-boot-starter-mail:1.3.1.RELEASE")

		    //Otros
		    compile("net.sf.dozer:dozer:5.5.1")		
		    compile("org.json:json:20090211")    
		    compile("com.google.code.gson:gson:2.2.1")
	   		compile("commons-io:commons-io:2.4")
	   		compile("org.apache.commons:commons-math3:3.5")
	   		compile("commons-beanutils:commons-beanutils:1.9.2")
	   		compile("org.apache.commons:commons-jexl:2.1.1")
		    compile("org.apache.commons:commons-lang3:3.4")
		    compile("org.apache.poi:poi:3.13")
		    compile("org.apache.poi:poi-ooxml:3.13")
	   		compile("com.googlecode.linkedin-j:linkedin-j-core:1.0.416")
	   		compile("com.google.guava:guava:19.0")   		
	   		compile("com.amazonaws:aws-java-sdk:1.10.43")
	   		compile("com.amazonaws:aws-java-sdk-samples:1.1.3")
	   		compile("com.amazonaws:aws-java-sdk-ses:1.11.788")
	   		compile("org.glassfish.jersey.core:jersey-client:2.22.1")	   		
		    compile fileTree(dir: './localJars', include: '*.jar')
		    
		    //Solo se necesita esta libreria para pruebas 
		    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")  
		    
		    //Se usa este truco ya que hay conflicto con esta libreria
		    providedRuntime("c3p0:c3p0:0.9.1.1")

} 

//Si enabled = true,  se crea un archivo WAR con tomcat embebido . Para este caso se crea la carpeta /lib-provided en el WAR
//Si enabled = false, se crea un archivo WAR sin tomcat embebido . Para este caso se elimina la carpeta /lib-provided en el WAR
bootRepackage {
    enabled = true
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}