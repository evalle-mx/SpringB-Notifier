package net.tce.model;

// Generated Feb 2, 2015 3:37:31 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * TipoEvento generated by hbm2java
 */
@Entity @SuppressWarnings("serial")
@Table(name = "TIPO_EVENTO", uniqueConstraints = @UniqueConstraint(columnNames = "clave_evento"))
public class TipoEvento implements java.io.Serializable {

	private long idTipoEvento;
	private CategoriaEvento categoriaEvento;
	private String claveEvento;
	private int prioridad;
	private String texto;
	private String descripcion;
	private Boolean activo;
	private Set<NotificacionProgramada> notificacionProgramadas = new HashSet<NotificacionProgramada>(0);
	private Set<Notificacion> notificacions = new HashSet<Notificacion>(0);
	private Set<TipoEventoMecanismo> tipoEventoMecanismos = new HashSet<TipoEventoMecanismo>(0);
	private Set<TipoEventoReceptor> tipoEventoReceptors = new HashSet<TipoEventoReceptor>(0);

	public TipoEvento() {
	}

	public TipoEvento(long idTipoEvento, CategoriaEvento categoriaEvento, String claveEvento, int prioridad,
			String texto) {
		this.idTipoEvento = idTipoEvento;
		this.categoriaEvento = categoriaEvento;
		this.claveEvento = claveEvento;
		this.prioridad = prioridad;
		this.texto = texto;
	}

	public TipoEvento(long idTipoEvento, CategoriaEvento categoriaEvento, String claveEvento, int prioridad,
			String texto, String descripcion, Boolean activo, Set<NotificacionProgramada> notificacionProgramadas,
			Set<Notificacion> notificacions, Set<TipoEventoMecanismo> tipoEventoMecanismos,
			Set<TipoEventoReceptor> tipoEventoReceptors) {
		this.idTipoEvento = idTipoEvento;
		this.categoriaEvento = categoriaEvento;
		this.claveEvento = claveEvento;
		this.prioridad = prioridad;
		this.texto = texto;
		this.descripcion = descripcion;
		this.activo = activo;
		this.notificacionProgramadas = notificacionProgramadas;
		this.notificacions = notificacions;
		this.tipoEventoMecanismos = tipoEventoMecanismos;
		this.tipoEventoReceptors = tipoEventoReceptors;
	}

	@Id
	@Column(name = "ID_TIPO_EVENTO", unique = true, nullable = false)
	public long getIdTipoEvento() {
		return this.idTipoEvento;
	}

	public void setIdTipoEvento(long idTipoEvento) {
		this.idTipoEvento = idTipoEvento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_CATEGORIA_EVENTO", nullable = false)
	public CategoriaEvento getCategoriaEvento() {
		return this.categoriaEvento;
	}

	public void setCategoriaEvento(CategoriaEvento categoriaEvento) {
		this.categoriaEvento = categoriaEvento;
	}

	@Column(name = "CLAVE_EVENTO", unique = true, nullable = false, length = 50)
	public String getClaveEvento() {
		return this.claveEvento;
	}

	public void setClaveEvento(String claveEvento) {
		this.claveEvento = claveEvento;
	}

	@Column(name = "PRIORIDAD", nullable = false)
	public int getPrioridad() {
		return this.prioridad;
	}

	public void setPrioridad(int prioridad) {
		this.prioridad = prioridad;
	}

	@Column(name = "TEXTO", nullable = false, length = 2500)
	public String getTexto() {
		return this.texto;
	}

	public void setTexto(String texto) {
		this.texto = texto;
	}
	
	@Column(name = "descripcion", length = 2500)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "activo")
	public Boolean getActivo() {
		return this.activo;
	}

	public void setActivo(Boolean activo) {
		this.activo = activo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tipoEvento")
	public Set<NotificacionProgramada> getNotificacionProgramadas() {
		return this.notificacionProgramadas;
	}

	public void setNotificacionProgramadas(
			Set<NotificacionProgramada> notificacionProgramadas) {
		this.notificacionProgramadas = notificacionProgramadas;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tipoEvento")
	public Set<Notificacion> getNotificacions() {
		return this.notificacions;
	}

	public void setNotificacions(Set<Notificacion> notificacions) {
		this.notificacions = notificacions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tipoEvento")
	public Set<TipoEventoReceptor> getTipoEventoReceptors() {
		return this.tipoEventoReceptors;
	}

	public void setTipoEventoReceptors(
			Set<TipoEventoReceptor> tipoEventoReceptors) {
		this.tipoEventoReceptors = tipoEventoReceptors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tipoEvento")
	public Set<TipoEventoMecanismo> getTipoEventoMecanismos() {
		return this.tipoEventoMecanismos;
	}

	public void setTipoEventoMecanismos(
			Set<TipoEventoMecanismo> tipoEventoMecanismos) {
		this.tipoEventoMecanismos = tipoEventoMecanismos;
	}

}
