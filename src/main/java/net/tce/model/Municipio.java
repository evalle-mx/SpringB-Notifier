package net.tce.model;

// Generated Feb 2, 2015 3:37:31 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Municipio generated by hbm2java
 */
@Entity @SuppressWarnings("serial")
@Table(name = "MUNICIPIO", uniqueConstraints = @UniqueConstraint(columnNames = {
		"clave_municipio", "id_estado" }))
public class Municipio implements java.io.Serializable {

	private long idMunicipio;
	private Estado estado;
	private String claveMunicipio;
	private String nombre;
	private BigDecimal extension;
	private Long poblacion;
	private BigDecimal densidad;
	private BigDecimal latitude;
	private BigDecimal longitude;
	private boolean estatusRegistro;
	private Set<MunicipioDistancia> municipioDistanciasForIdMunicipio = new HashSet<MunicipioDistancia>(
			0);
	private Set<Ciudad> ciudads = new HashSet<Ciudad>(0);
	private Set<Asentamiento> asentamientos = new HashSet<Asentamiento>(0);
	private Set<MunicipioAdyacencia> municipioAdyacenciasForIdMunicipio = new HashSet<MunicipioAdyacencia>(
			0);
	private Set<MunicipioDistancia> municipioDistanciasForIdMunicipioRelacionado = new HashSet<MunicipioDistancia>(
			0);
	private Set<MunicipioAdyacencia> municipioAdyacenciasForIdMunicipioAdyacente = new HashSet<MunicipioAdyacencia>(
			0);
	private Set<Domicilio> domicilios = new HashSet<Domicilio>(0);

	public Municipio() {
	}

	public Municipio(long idMunicipio, Estado estado, String nombre) {
		this.idMunicipio = idMunicipio;
		this.estado = estado;
		this.nombre = nombre;
	}

	public Municipio(
			long idMunicipio,
			Estado estado,
			String claveMunicipio,
			String nombre,
			BigDecimal extension,
			Long poblacion,
			BigDecimal densidad,
			BigDecimal latitude,
			BigDecimal longitude,
			boolean estatusRegistro,
			Set<MunicipioDistancia> municipioDistanciasForIdMunicipio,
			Set<Ciudad> ciudads,
			Set<Asentamiento> asentamientos,
			Set<MunicipioAdyacencia> municipioAdyacenciasForIdMunicipio,
			Set<MunicipioDistancia> municipioDistanciasForIdMunicipioRelacionado,
			Set<MunicipioAdyacencia> municipioAdyacenciasForIdMunicipioAdyacente,
			Set<Domicilio> domicilios) {
		this.idMunicipio = idMunicipio;
		this.estado = estado;
		this.claveMunicipio = claveMunicipio;
		this.nombre = nombre;
		this.extension = extension;
		this.poblacion = poblacion;
		this.densidad = densidad;
		this.latitude = latitude;
		this.longitude = longitude;
		this.estatusRegistro = estatusRegistro;
		this.municipioDistanciasForIdMunicipio = municipioDistanciasForIdMunicipio;
		this.ciudads = ciudads;
		this.asentamientos = asentamientos;
		this.municipioAdyacenciasForIdMunicipio = municipioAdyacenciasForIdMunicipio;
		this.municipioDistanciasForIdMunicipioRelacionado = municipioDistanciasForIdMunicipioRelacionado;
		this.municipioAdyacenciasForIdMunicipioAdyacente = municipioAdyacenciasForIdMunicipioAdyacente;
		this.domicilios = domicilios;
	}

	@Id
	@Column(name = "id_municipio", unique = true, nullable = false)
	public long getIdMunicipio() {
		return this.idMunicipio;
	}

	public void setIdMunicipio(long idMunicipio) {
		this.idMunicipio = idMunicipio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_estado", nullable = false)
	public Estado getEstado() {
		return this.estado;
	}

	public void setEstado(Estado estado) {
		this.estado = estado;
	}

	@Column(name = "clave_municipio", length = 10)
	public String getClaveMunicipio() {
		return this.claveMunicipio;
	}

	public void setClaveMunicipio(String claveMunicipio) {
		this.claveMunicipio = claveMunicipio;
	}

	@Column(name = "nombre", nullable = false, length = 100)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "extension", precision = 131089, scale = 0)
	public BigDecimal getExtension() {
		return this.extension;
	}

	public void setExtension(BigDecimal extension) {
		this.extension = extension;
	}

	@Column(name = "poblacion")
	public Long getPoblacion() {
		return this.poblacion;
	}

	public void setPoblacion(Long poblacion) {
		this.poblacion = poblacion;
	}

	@Column(name = "densidad", precision = 131089, scale = 0)
	public BigDecimal getDensidad() {
		return this.densidad;
	}

	public void setDensidad(BigDecimal densidad) {
		this.densidad = densidad;
	}

	@Column(name = "latitude", precision = 131089, scale = 0)
	public BigDecimal getLatitude() {
		return this.latitude;
	}

	public void setLatitude(BigDecimal latitude) {
		this.latitude = latitude;
	}

	@Column(name = "longitude", precision = 131089, scale = 0)
	public BigDecimal getLongitude() {
		return this.longitude;
	}

	public void setLongitude(BigDecimal longitude) {
		this.longitude = longitude;
	}

	@Column(name = "estatus_registro", nullable = false)
	public boolean isEstatusRegistro() {
		return this.estatusRegistro;
	}

	public void setEstatusRegistro(boolean estatusRegistro) {
		this.estatusRegistro = estatusRegistro;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "municipioByIdMunicipio")
	public Set<MunicipioDistancia> getMunicipioDistanciasForIdMunicipio() {
		return this.municipioDistanciasForIdMunicipio;
	}

	public void setMunicipioDistanciasForIdMunicipio(
			Set<MunicipioDistancia> municipioDistanciasForIdMunicipio) {
		this.municipioDistanciasForIdMunicipio = municipioDistanciasForIdMunicipio;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "municipio")
	public Set<Ciudad> getCiudads() {
		return this.ciudads;
	}

	public void setCiudads(Set<Ciudad> ciudads) {
		this.ciudads = ciudads;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "municipio")
	public Set<Asentamiento> getAsentamientos() {
		return this.asentamientos;
	}

	public void setAsentamientos(Set<Asentamiento> asentamientos) {
		this.asentamientos = asentamientos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "municipioByIdMunicipio")
	public Set<MunicipioAdyacencia> getMunicipioAdyacenciasForIdMunicipio() {
		return this.municipioAdyacenciasForIdMunicipio;
	}

	public void setMunicipioAdyacenciasForIdMunicipio(
			Set<MunicipioAdyacencia> municipioAdyacenciasForIdMunicipio) {
		this.municipioAdyacenciasForIdMunicipio = municipioAdyacenciasForIdMunicipio;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "municipioByIdMunicipioRelacionado")
	public Set<MunicipioDistancia> getMunicipioDistanciasForIdMunicipioRelacionado() {
		return this.municipioDistanciasForIdMunicipioRelacionado;
	}

	public void setMunicipioDistanciasForIdMunicipioRelacionado(
			Set<MunicipioDistancia> municipioDistanciasForIdMunicipioRelacionado) {
		this.municipioDistanciasForIdMunicipioRelacionado = municipioDistanciasForIdMunicipioRelacionado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "municipioByIdMunicipioAdyacente")
	public Set<MunicipioAdyacencia> getMunicipioAdyacenciasForIdMunicipioAdyacente() {
		return this.municipioAdyacenciasForIdMunicipioAdyacente;
	}

	public void setMunicipioAdyacenciasForIdMunicipioAdyacente(
			Set<MunicipioAdyacencia> municipioAdyacenciasForIdMunicipioAdyacente) {
		this.municipioAdyacenciasForIdMunicipioAdyacente = municipioAdyacenciasForIdMunicipioAdyacente;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "municipio")
	public Set<Domicilio> getDomicilios() {
		return this.domicilios;
	}

	public void setDomicilios(Set<Domicilio> domicilios) {
		this.domicilios = domicilios;
	}

}
