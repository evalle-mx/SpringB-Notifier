package net.tce.model;

// Generated Sep 11, 2018 12:40:00 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.DynamicUpdate;

import net.tce.util.Constante;

/**
 * Monitor generated by hbm2java
 */
@Entity
@DynamicUpdate
@Table(name = "monitor")
public class Monitor implements java.io.Serializable {

	private long idMonitor;
	private RelacionEmpresaPersona relacionEmpresaPersona;
	private ModeloRscPosFase modeloRscPosFase;
	private Boolean principal;
	private Set<TrackingMonitor> trackingMonitors = new HashSet<TrackingMonitor>(
			0);

	public Monitor() {
	}

	public Monitor(long idMonitor,
			RelacionEmpresaPersona relacionEmpresaPersona,
			ModeloRscPosFase modeloRscPosFase) {
		this.idMonitor = idMonitor;
		this.relacionEmpresaPersona = relacionEmpresaPersona;
		this.modeloRscPosFase = modeloRscPosFase;
	}

	public Monitor(long idMonitor,
			RelacionEmpresaPersona relacionEmpresaPersona,
			ModeloRscPosFase modeloRscPosFase, Boolean principal,
			Set<TrackingMonitor> trackingMonitors) {
		this.idMonitor = idMonitor;
		this.relacionEmpresaPersona = relacionEmpresaPersona;
		this.modeloRscPosFase = modeloRscPosFase;
		this.principal = principal;
		this.trackingMonitors = trackingMonitors;
	}

	@Id
	@SequenceGenerator(name="seq_monitor", sequenceName=Constante.SECUENCIA_BD_MONITOR, initialValue=1, allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="seq_monitor")
	@Column(name = "id_monitor", unique = true, nullable = false)
	public long getIdMonitor() {
		return this.idMonitor;
	}

	public void setIdMonitor(long idMonitor) {
		this.idMonitor = idMonitor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_modelo_rsc_pos_fase", nullable = false)
	public ModeloRscPosFase getModeloRscPosFase() {
		return this.modeloRscPosFase;
	}

	public void setModeloRscPosFase(
			ModeloRscPosFase modeloRscPosFase) {
		this.modeloRscPosFase = modeloRscPosFase;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_relacion_empresa_persona", nullable = false)
	public RelacionEmpresaPersona getRelacionEmpresaPersona() {
		return this.relacionEmpresaPersona;
	}

	public void setRelacionEmpresaPersona(
			RelacionEmpresaPersona relacionEmpresaPersona) {
		this.relacionEmpresaPersona = relacionEmpresaPersona;
	}

	@Column(name = "principal")
	public Boolean getPrincipal() {
		return this.principal;
	}

	public void setPrincipal(Boolean principal) {
		this.principal = principal;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "monitor")
	public Set<TrackingMonitor> getTrackingMonitors() {
		return this.trackingMonitors;
	}

	public void setTrackingMonitors(Set<TrackingMonitor> trackingMonitors) {
		this.trackingMonitors = trackingMonitors;
	}

}
