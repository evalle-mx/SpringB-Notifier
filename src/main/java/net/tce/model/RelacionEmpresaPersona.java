package net.tce.model;

// Generated Feb 2, 2015 3:37:31 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import net.tce.util.Constante;

/**
 * RelacionEmpresaPersona generated by hbm2java
 */
@Entity @SuppressWarnings("serial")
@Table(name = "RELACION_EMPRESA_PERSONA")
public class RelacionEmpresaPersona implements java.io.Serializable {

	private long idRelacionEmpresaPersona;
	private Rol rol;
	private Empresa empresa;
	private Persona persona;
	private Date fechaCreacion;
	private Boolean representante;
	private boolean estatusRegistro;
	private String claveInterna;
	private Set<PosibleCandidato> posibleCandidatos = new HashSet<PosibleCandidato>(0);
	private Set<BitacoraPosicion> bitacoraPosicionsS = new HashSet<BitacoraPosicion>(0);
	private Set<TrackingMonitor> trackingMonitors = new HashSet<TrackingMonitor>(0);
	private Set<BitacoraTrack> bitacoraTracks = new HashSet<BitacoraTrack>(0);
	private Set<BitacoraPosicion> bitacoraPosicions = new HashSet<BitacoraPosicion>(0);
	private Set<Monitor> monitors = new HashSet<Monitor>(0);

	public RelacionEmpresaPersona() {
	}

	public RelacionEmpresaPersona(long idRelacionEmpresaPersona, Rol rol, Empresa empresa, Persona persona,
			Date fechaCreacion, boolean estatusRegistro) {
		this.idRelacionEmpresaPersona = idRelacionEmpresaPersona;
		this.rol = rol;
		this.empresa = empresa;
		this.persona = persona;
		this.fechaCreacion = fechaCreacion;
		this.estatusRegistro = estatusRegistro;
	}

	public RelacionEmpresaPersona(long idRelacionEmpresaPersona, Rol rol, Empresa empresa, Persona persona,
			Date fechaCreacion, Boolean representante, boolean estatusRegistro, String claveInterna,
			Set<PosibleCandidato> posibleCandidatos,
			Set<BitacoraPosicion> bitacoraPosicionsS, Set<TrackingMonitor> trackingMonitors,
			Set<BitacoraTrack> bitacoraTracks, Set<BitacoraPosicion> bitacoraPosicions,
			Set<Monitor> monitors) {
		this.idRelacionEmpresaPersona = idRelacionEmpresaPersona;
		this.rol = rol;
		this.empresa = empresa;
		this.persona = persona;
		this.fechaCreacion = fechaCreacion;
		this.representante = representante;
		this.estatusRegistro = estatusRegistro;
		this.claveInterna = claveInterna;
		this.posibleCandidatos = posibleCandidatos;
		this.bitacoraPosicionsS = bitacoraPosicionsS;
		this.trackingMonitors = trackingMonitors;
		this.bitacoraTracks = bitacoraTracks;
		this.bitacoraPosicions = bitacoraPosicions;
		this.monitors = monitors;
	}

	@Id
	@Column(name = "ID_RELACION_EMPRESA_PERSONA", unique = true, nullable = false)
	@SequenceGenerator(name="seq_Relacion_Empresa_Persona", sequenceName=Constante.SECUENCIA_BD_REL_EMPRPERSONA, initialValue=1, allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="seq_Relacion_Empresa_Persona")
	public long getIdRelacionEmpresaPersona() {
		return this.idRelacionEmpresaPersona;
	}

	public void setIdRelacionEmpresaPersona(long idRelacionEmpresaPersona) {
		this.idRelacionEmpresaPersona = idRelacionEmpresaPersona;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_EMPRESA", nullable = false)
	public Empresa getEmpresa() {
		return this.empresa;
	}

	public void setEmpresa(Empresa empresa) {
		this.empresa = empresa;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_rol", nullable = false)
	public Rol getRol() {
		return this.rol;
	}

	public void setRol(Rol rol) {
		this.rol = rol;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_PERSONA", nullable = false)
	public Persona getPersona() {
		return this.persona;
	}

	public void setPersona(Persona persona) {
		this.persona = persona;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHA_CREACION", nullable = false, length = 29)
	public Date getFechaCreacion() {
		return this.fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

	@Column(name = "REPRESENTANTE")
	public Boolean getRepresentante() {
		return this.representante;
	}

	public void setRepresentante(Boolean representante) {
		this.representante = representante;
	}

	@Column(name = "ESTATUS_REGISTRO", nullable = false)
	public boolean isEstatusRegistro() {
		return this.estatusRegistro;
	}

	public void setEstatusRegistro(boolean estatusRegistro) {
		this.estatusRegistro = estatusRegistro;
	}

	@Column(name = "CLAVE_INTERNA", length = 50)
	public String getClaveInterna() {
		return this.claveInterna;
	}

	public void setClaveInterna(String claveInterna) {
		this.claveInterna = claveInterna;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "relacionEmpresaPersona")
	public Set<TrackingMonitor> getTrackingMonitors() {
		return this.trackingMonitors;
	}

	public void setTrackingMonitors(Set<TrackingMonitor> trackingMonitors) {
		this.trackingMonitors = trackingMonitors;
	}

	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "relacionEmpresaPersona")
	public Set<PosibleCandidato> getPosibleCandidatos() {
		return this.posibleCandidatos;
	}

	public void setPosibleCandidatos(Set<PosibleCandidato> posibleCandidatos) {
		this.posibleCandidatos = posibleCandidatos;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "relacionEmpresaPersona")
	public Set<Monitor> getMonitors() {
		return this.monitors;
	}

	public void setMonitors(Set<Monitor> monitors) {
		this.monitors = monitors;
	}
	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "relacionEmpresaPersona")
	public Set<BitacoraTrack> getBitacoraTracks() {
		return this.bitacoraTracks;
	}

	public void setBitacoraTracks(Set<BitacoraTrack> bitacoraTracks) {
		this.bitacoraTracks = bitacoraTracks;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "relacionEmpresaPersona")
	public Set<BitacoraPosicion> getBitacoraPosicions() {
		return this.bitacoraPosicions;
	}

	public void setBitacoraPosicions(Set<BitacoraPosicion> bitacoraPosicions) {
		this.bitacoraPosicions = bitacoraPosicions;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "relacionEmpresaPersonaS")
	public Set<BitacoraPosicion> getBitacoraPosicionsS() {
		return this.bitacoraPosicionsS;
	}

	public void setBitacoraPosicionsS(
			Set<BitacoraPosicion> bitacoraPosicionsS) {
		this.bitacoraPosicionsS = bitacoraPosicionsS;
	}
}
