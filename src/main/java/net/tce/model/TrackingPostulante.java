package net.tce.model;

// Generated Sep 11, 2018 12:40:00 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.DynamicUpdate;

import net.tce.util.Constante;

/**
 * TrackingPostulante generated by hbm2java
 */
@Entity
@DynamicUpdate
@Table(name = "tracking_postulante")
public class TrackingPostulante implements java.io.Serializable {

	private long idTrackingPostulante;
	private ModeloRscPosFase modeloRscPosFase;
	private EstadoTracking estadoTracking;
	private Candidato candidato;
	private PosibleCandidato posibleCandidato;
	private String comentario;
	private Date fechaInicio;
	private Date fechaFin;
	private boolean notificacionEnviada;
	private Set<Recordatorio> recordatorios = new HashSet<Recordatorio>(0);
	private Set<Contenido> contenidos = new HashSet<Contenido>(0);
	private Set<TrackingMonitor> trackingMonitors = new HashSet<TrackingMonitor>(0);

	public TrackingPostulante() {
	}

	public TrackingPostulante(long idTrackingPostulante, ModeloRscPosFase modeloRscPosFase,
			EstadoTracking estadoTracking, boolean notificacionEnviada) {
		this.idTrackingPostulante = idTrackingPostulante;
		this.modeloRscPosFase = modeloRscPosFase;
		this.estadoTracking = estadoTracking;
		this.notificacionEnviada = notificacionEnviada;
	}

	public TrackingPostulante(long idTrackingPostulante, ModeloRscPosFase modeloRscPosFase,
			EstadoTracking estadoTracking, Candidato candidato, PosibleCandidato posibleCandidato, String comentario,
			Date fechaInicio, Date fechaFin, boolean notificacionEnviada, Set<Recordatorio> recordatorios,
			Set<Contenido> contenidos,  Set<TrackingMonitor> trackingMonitors) {
		this.idTrackingPostulante = idTrackingPostulante;
		this.modeloRscPosFase = modeloRscPosFase;
		this.estadoTracking = estadoTracking;
		this.candidato = candidato;
		this.posibleCandidato = posibleCandidato;
		this.comentario = comentario;
		this.fechaInicio = fechaInicio;
		this.fechaFin = fechaFin;
		this.notificacionEnviada = notificacionEnviada;
		this.recordatorios = recordatorios;
		this.contenidos = contenidos;
		this.trackingMonitors = trackingMonitors;
	}

	@Id
	@SequenceGenerator(name="seq_tracking_postulente", sequenceName=Constante.SECUENCIA_BD_TCK_POSTULANTE, initialValue=1, allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="seq_tracking_postulente")
	@Column(name = "id_tracking_postulante", unique = true, nullable = false)
	public long getIdTrackingPostulante() {
		return this.idTrackingPostulante;
	}

	public void setIdTrackingPostulante(long idTrackingPostulante) {
		this.idTrackingPostulante = idTrackingPostulante;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_posible_candidato")
	public PosibleCandidato getPosibleCandidato() {
		return this.posibleCandidato;
	}

	public void setPosibleCandidato(PosibleCandidato posibleCandidato) {
		this.posibleCandidato = posibleCandidato;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_estado_tracking", nullable = false)
	public EstadoTracking getEstadoTracking() {
		return this.estadoTracking;
	}

	public void setEstadoTracking(EstadoTracking estadoTracking) {
		this.estadoTracking = estadoTracking;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_candidato")
	public Candidato getCandidato() {
		return this.candidato;
	}

	public void setCandidato(Candidato candidato) {
		this.candidato = candidato;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_modelo_rsc_pos_fase", nullable = false)
	public ModeloRscPosFase getModeloRscPosFase() {
		return this.modeloRscPosFase;
	}

	public void setModeloRscPosFase(
			ModeloRscPosFase modeloRscPosFase) {
		this.modeloRscPosFase = modeloRscPosFase;
	}

	@Column(name = "comentario", length = 1500)
	public String getComentario() {
		return this.comentario;
	}

	public void setComentario(String comentario) {
		this.comentario = comentario;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_inicio", length = 29)
	public Date getFechaInicio() {
		return this.fechaInicio;
	}

	public void setFechaInicio(Date fechaInicio) {
		this.fechaInicio = fechaInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_fin", length = 29)
	public Date getFechaFin() {
		return this.fechaFin;
	}

	public void setFechaFin(Date fechaFin) {
		this.fechaFin = fechaFin;
	}
	
	@Column(name = "notificacion_enviada", nullable = false)
	public boolean isNotificacionEnviada() {
		return this.notificacionEnviada;
	}

	public void setNotificacionEnviada(boolean notificacionEnviada) {
		this.notificacionEnviada = notificacionEnviada;
	}

	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "trackingPostulante")
	public Set<Recordatorio> getRecordatorios() {
		return this.recordatorios;
	}

	public void setRecordatorios(Set<Recordatorio> recordatorios) {
		this.recordatorios = recordatorios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "trackingPostulante")
	public Set<TrackingMonitor> getTrackingMonitors() {
		return this.trackingMonitors;
	}

	public void setTrackingMonitors(Set<TrackingMonitor> trackingMonitors) {
		this.trackingMonitors = trackingMonitors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "trackingPostulante")
	public Set<Contenido> getContenidos() {
		return this.contenidos;
	}

	public void setContenidos(Set<Contenido> contenidos) {
		this.contenidos = contenidos;
	}

}
