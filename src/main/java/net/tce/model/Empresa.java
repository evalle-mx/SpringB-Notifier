package net.tce.model;

// Generated Feb 2, 2015 3:37:31 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.DynamicUpdate;

import net.tce.util.Constante;

/**
 * Empresa generated by hbm2java
 */
@Entity @SuppressWarnings("serial")
@Table(name = "EMPRESA", uniqueConstraints = {
		@UniqueConstraint(columnNames = "rfc") })
@DynamicUpdate	
public class Empresa implements java.io.Serializable {

	private long idEmpresa;
	private TipoSuscriptor tipoSuscriptor;
	private EstatusInscripcion estatusInscripcion;
	private Mes mes;
	private String razonSocial;
	private String nombre;
	private String texto;
	private Date fechaInicio;
	private Short anioInicio;
	private Byte diaInicio;
	private Date fechaRegistro;
	private String rfc;
	private Long numeroEmpleados;
	private String clientes;
	private String socios;
	private boolean existente;
	private boolean estaVerificado;
	private Short calcan;
	private Short calemp;
	private Date fechaModificacion;
	private Boolean clasificado;
	private Set<Posicion> posicions = new HashSet<Posicion>(0);
	private Set<RelacionEmpresa> relacionEmpresasForIdEmpresaRel = new HashSet<RelacionEmpresa>(
			0);
	private Set<RelacionEmpresaPersona> relacionEmpresaPersonas = new HashSet<RelacionEmpresaPersona>(
			0);
	private Set<Contacto> contactos = new HashSet<Contacto>(0);
	private Set<EmpresaPolitica> empresaPoliticas = new HashSet<EmpresaPolitica>(
			0);
	private Set<Candidato> candidatos = new HashSet<Candidato>(0);
	private Set<EmpresaPerfil> empresaPerfils = new HashSet<EmpresaPerfil>(0);
	private Set<CertificacionEmpresa> certificacionEmpresas = new HashSet<CertificacionEmpresa>(
			0);
	private Set<AreaEmpresa> areaEmpresas = new HashSet<AreaEmpresa>(0);
	private Set<Contenido> contenidos = new HashSet<Contenido>(0);
	private Set<DocumentoClasificacion> documentoClasificacions = new HashSet<DocumentoClasificacion>(
			0);
	private Set<Perfil> perfils = new HashSet<Perfil>(0);
	private Set<Premio> premios = new HashSet<Premio>(0);
	private Set<PoliticaValor> politicaValors = new HashSet<PoliticaValor>(0);
	private Set<RelacionEmpresa> relacionEmpresasForIdEmpresa = new HashSet<RelacionEmpresa>(
			0);
	private Set<Domicilio> domicilios = new HashSet<Domicilio>(0);
	private Set<EmpresaConf> empresaConfs = new HashSet<EmpresaConf>(0);

	public Empresa() {
	}

	public Empresa(long idEmpresa, EstatusInscripcion estatusInscripcion) {
		this.idEmpresa = idEmpresa;
		this.estatusInscripcion = estatusInscripcion;
	}

	public Empresa(long idEmpresa, TipoSuscriptor tipoSuscriptor,
			EstatusInscripcion estatusInscripcion,
			Mes mes,  String razonSocial,
			String nombre, String texto, Date fechaInicio, Short anioInicio,
			Byte diaInicio, Date fechaRegistro, String rfc,
			Long numeroEmpleados, String clientes, String socios,
			 boolean existente, boolean estaVerificado,
			Short calcan, Short calemp, Date fechaModificacion,
			Boolean clasificado, Set<Posicion> posicions,
			Set<RelacionEmpresa> relacionEmpresasForIdEmpresaRel,
			Set<RelacionEmpresaPersona> relacionEmpresaPersonas,
			Set<Contacto> contactos, Set<EmpresaPolitica> empresaPoliticas,
			Set<Candidato> candidatos, Set<EmpresaPerfil> empresaPerfils,
			Set<CertificacionEmpresa> certificacionEmpresas,
			Set<AreaEmpresa> areaEmpresas, Set<Contenido> contenidos,
			Set<DocumentoClasificacion> documentoClasificacions,
			Set<Perfil> perfils, Set<Premio> premios,
			Set<PoliticaValor> politicaValors,
			Set<RelacionEmpresa> relacionEmpresasForIdEmpresa,
			Set<Domicilio> domicilios, Set<EmpresaConf> empresaConfs) {
		this.idEmpresa = idEmpresa;
		this.tipoSuscriptor = tipoSuscriptor;
		this.estatusInscripcion = estatusInscripcion;
		this.mes = mes;
		this.razonSocial = razonSocial;
		this.nombre = nombre;
		this.texto = texto;
		this.fechaInicio = fechaInicio;
		this.anioInicio = anioInicio;
		this.diaInicio = diaInicio;
		this.fechaRegistro = fechaRegistro;
		this.rfc = rfc;
		this.numeroEmpleados = numeroEmpleados;
		this.clientes = clientes;
		this.socios = socios;
		this.existente = existente;
		this.estaVerificado = estaVerificado;
		this.calcan = calcan;
		this.calemp = calemp;
		this.fechaModificacion = fechaModificacion;
		this.clasificado = clasificado;
		this.posicions = posicions;
		this.relacionEmpresasForIdEmpresaRel = relacionEmpresasForIdEmpresaRel;
		this.relacionEmpresaPersonas = relacionEmpresaPersonas;
		this.contactos = contactos;
		this.empresaPoliticas = empresaPoliticas;
		this.candidatos = candidatos;
		this.empresaPerfils = empresaPerfils;
		this.certificacionEmpresas = certificacionEmpresas;
		this.areaEmpresas = areaEmpresas;
		this.contenidos = contenidos;
		this.documentoClasificacions = documentoClasificacions;
		this.perfils = perfils;
		this.premios = premios;
		this.politicaValors = politicaValors;
		this.relacionEmpresasForIdEmpresa = relacionEmpresasForIdEmpresa;
		this.domicilios = domicilios;
		this.empresaConfs = empresaConfs;
	}

	@Id
	@Column(name = "ID_EMPRESA", unique = true, nullable = false)
	@SequenceGenerator(name="seq_empresa", sequenceName=Constante.SECUENCIA_BD_EMPRESA, initialValue=1, allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="seq_empresa")	
	public long getIdEmpresa() {
		return this.idEmpresa;
	}

	public void setIdEmpresa(long idEmpresa) {
		this.idEmpresa = idEmpresa;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_TIPO_SUSCRIPTOR")
	public TipoSuscriptor getTipoSuscriptor() {
		return this.tipoSuscriptor;
	}

	public void setTipoSuscriptor(TipoSuscriptor tipoSuscriptor) {
		this.tipoSuscriptor = tipoSuscriptor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_ESTATUS_INSCRIPCION", nullable = false)
	public EstatusInscripcion getEstatusInscripcion() {
		return this.estatusInscripcion;
	}

	public void setEstatusInscripcion(EstatusInscripcion estatusInscripcion) {
		this.estatusInscripcion = estatusInscripcion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MES_INICIO")
	public Mes getMes() {
		return this.mes;
	}

	public void setMes(Mes mes) {
		this.mes = mes;
	}


	@Column(name = "RAZON_SOCIAL", length = 100)
	public String getRazonSocial() {
		return this.razonSocial;
	}

	public void setRazonSocial(String razonSocial) {
		this.razonSocial = razonSocial;
	}

	@Column(name = "NOMBRE", length = 250)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "TEXTO", length = 2500)
	public String getTexto() {
		return this.texto;
	}

	public void setTexto(String texto) {
		this.texto = texto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHA_INICIO", length = 29)
	public Date getFechaInicio() {
		return this.fechaInicio;
	}

	public void setFechaInicio(Date fechaInicio) {
		this.fechaInicio = fechaInicio;
	}

	@Column(name = "ANIO_INICIO")
	public Short getAnioInicio() {
		return this.anioInicio;
	}

	public void setAnioInicio(Short anioInicio) {
		this.anioInicio = anioInicio;
	}

	@Column(name = "DIA_INICIO")
	public Byte getDiaInicio() {
		return this.diaInicio;
	}

	public void setDiaInicio(Byte diaInicio) {
		this.diaInicio = diaInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHA_REGISTRO", length = 29)
	public Date getFechaRegistro() {
		return this.fechaRegistro;
	}

	public void setFechaRegistro(Date fechaRegistro) {
		this.fechaRegistro = fechaRegistro;
	}

	@Column(name = "RFC", unique = true, length = 13)
	public String getRfc() {
		return this.rfc;
	}

	public void setRfc(String rfc) {
		this.rfc = rfc;
	}

	@Column(name = "NUMERO_EMPLEADOS")
	public Long getNumeroEmpleados() {
		return this.numeroEmpleados;
	}

	public void setNumeroEmpleados(Long numeroEmpleados) {
		this.numeroEmpleados = numeroEmpleados;
	}

	@Column(name = "CLIENTES", length = 1500)
	public String getClientes() {
		return this.clientes;
	}

	public void setClientes(String clientes) {
		this.clientes = clientes;
	}

	@Column(name = "SOCIOS", length = 1500)
	public String getSocios() {
		return this.socios;
	}

	public void setSocios(String socios) {
		this.socios = socios;
	}

	@Column(name = "EXISTENTE", nullable = false)
	public boolean isExistente() {
		return this.existente;
	}

	public void setExistente(boolean existente) {
		this.existente = existente;
	}

	@Column(name = "ESTA_VERIFICADO", nullable = false)
	public boolean isEstaVerificado() {
		return this.estaVerificado;
	}

	public void setEstaVerificado(boolean estaVerificado) {
		this.estaVerificado = estaVerificado;
	}

	@Column(name = "CALCAN")
	public Short getCalcan() {
		return this.calcan;
	}

	public void setCalcan(Short calcan) {
		this.calcan = calcan;
	}

	@Column(name = "CALEMP")
	public Short getCalemp() {
		return this.calemp;
	}

	public void setCalemp(Short calemp) {
		this.calemp = calemp;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHA_MODIFICACION", length = 29)
	public Date getFechaModificacion() {
		return this.fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	@Column(name = "CLASIFICADO")
	public Boolean getClasificado() {
		return this.clasificado;
	}

	public void setClasificado(Boolean clasificado) {
		this.clasificado = clasificado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<Posicion> getPosicions() {
		return this.posicions;
	}

	public void setPosicions(Set<Posicion> posicions) {
		this.posicions = posicions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresaByIdEmpresaRel")
	public Set<RelacionEmpresa> getRelacionEmpresasForIdEmpresaRel() {
		return this.relacionEmpresasForIdEmpresaRel;
	}

	public void setRelacionEmpresasForIdEmpresaRel(
			Set<RelacionEmpresa> relacionEmpresasForIdEmpresaRel) {
		this.relacionEmpresasForIdEmpresaRel = relacionEmpresasForIdEmpresaRel;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<RelacionEmpresaPersona> getRelacionEmpresaPersonas() {
		return this.relacionEmpresaPersonas;
	}

	public void setRelacionEmpresaPersonas(
			Set<RelacionEmpresaPersona> relacionEmpresaPersonas) {
		this.relacionEmpresaPersonas = relacionEmpresaPersonas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<Contacto> getContactos() {
		return this.contactos;
	}

	public void setContactos(Set<Contacto> contactos) {
		this.contactos = contactos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<EmpresaPolitica> getEmpresaPoliticas() {
		return this.empresaPoliticas;
	}

	public void setEmpresaPoliticas(Set<EmpresaPolitica> empresaPoliticas) {
		this.empresaPoliticas = empresaPoliticas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<Candidato> getCandidatos() {
		return this.candidatos;
	}

	public void setCandidatos(Set<Candidato> candidatos) {
		this.candidatos = candidatos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<EmpresaPerfil> getEmpresaPerfils() {
		return this.empresaPerfils;
	}

	public void setEmpresaPerfils(Set<EmpresaPerfil> empresaPerfils) {
		this.empresaPerfils = empresaPerfils;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<CertificacionEmpresa> getCertificacionEmpresas() {
		return this.certificacionEmpresas;
	}

	public void setCertificacionEmpresas(
			Set<CertificacionEmpresa> certificacionEmpresas) {
		this.certificacionEmpresas = certificacionEmpresas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<AreaEmpresa> getAreaEmpresas() {
		return this.areaEmpresas;
	}

	public void setAreaEmpresas(Set<AreaEmpresa> areaEmpresas) {
		this.areaEmpresas = areaEmpresas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<Contenido> getContenidos() {
		return this.contenidos;
	}

	public void setContenidos(Set<Contenido> contenidos) {
		this.contenidos = contenidos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<DocumentoClasificacion> getDocumentoClasificacions() {
		return this.documentoClasificacions;
	}

	public void setDocumentoClasificacions(
			Set<DocumentoClasificacion> documentoClasificacions) {
		this.documentoClasificacions = documentoClasificacions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<Perfil> getPerfils() {
		return this.perfils;
	}

	public void setPerfils(Set<Perfil> perfils) {
		this.perfils = perfils;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<Premio> getPremios() {
		return this.premios;
	}

	public void setPremios(Set<Premio> premios) {
		this.premios = premios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<PoliticaValor> getPoliticaValors() {
		return this.politicaValors;
	}

	public void setPoliticaValors(Set<PoliticaValor> politicaValors) {
		this.politicaValors = politicaValors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresaByIdEmpresa")
	public Set<RelacionEmpresa> getRelacionEmpresasForIdEmpresa() {
		return this.relacionEmpresasForIdEmpresa;
	}

	public void setRelacionEmpresasForIdEmpresa(
			Set<RelacionEmpresa> relacionEmpresasForIdEmpresa) {
		this.relacionEmpresasForIdEmpresa = relacionEmpresasForIdEmpresa;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<Domicilio> getDomicilios() {
		return this.domicilios;
	}

	public void setDomicilios(Set<Domicilio> domicilios) {
		this.domicilios = domicilios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<EmpresaConf> getEmpresaConfs() {
		return this.empresaConfs;
	}

	public void setEmpresaConfs(Set<EmpresaConf> empresaConfs) {
		this.empresaConfs = empresaConfs;
	}

}
