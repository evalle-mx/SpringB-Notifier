package net.tce.model;

// Generated Feb 2, 2015 3:37:31 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import net.tce.util.Constante;
import org.hibernate.annotations.DynamicUpdate;


/**
 * Persona generated by hbm2java
 */
@Entity @SuppressWarnings("serial")
@Table(name = "PERSONA")
@DynamicUpdate
public class Persona implements java.io.Serializable {

	private long idPersona;
	private EstatusEscolar estatusEscolar;
	private TipoEstatusPadres tipoEstatusPadres;
	private TipoContrato tipoContrato;
	private TipoConvivencia tipoConvivencia;
	private TipoGenero tipoGenero;
	private AmbitoGeografico ambitoGeografico;
	private GradoAcademico gradoAcademico;
	private Mes mes;
	private TipoJornada tipoJornada;
	private TipoVivienda tipoVivienda;
	private TipoDispViajar tipoDispViajar;
	private TipoPrestacion tipoPrestacion;
	private TipoPersona tipoPersona;
	private EstatusInscripcion estatusInscripcion;
	private SectorEconomico sectorEconomico;
	private EstadoCivil estadoCivil;
	private PeriodoEstadoCivil periodoEstadoCivil;
	private String nombre;
	private String apellidoPaterno;
	private String apellidoMaterno;
	private String email;
	private Short anioNacimiento;
	private Byte diaNacimiento;
	private Date fechaNacimiento;
	private Long salarioMin;
	private Long salarioMax;
	private Boolean permisoTrabajo;
	private Integer numeroHijos;
	private Integer numeroDependientesEconomicos;
	private Integer antiguedadDomicilio;
	private Boolean cambioDomicilio;
	private Boolean disponibilidadHorario;
	private Long diasExperienciaLaboral;
	private Date fechaCreacion;
	private Date fechaModificacion;
	private Date fechaPublicacion;
	private String codigoLookAndFeel;
	private Boolean clasificado;
	private boolean sePreClasifica;
	private String tokenInicio;
	private Byte edad;
	private String tituloMax;
	private String ultimoPuesto;
	private Short numeroConfirmarInscripcion;
	private Short numeroDebePublicar;
	private Date fechaConfirmarInscripcion;
	private Date fechaDebePublicar;
	private Set<Contacto> contactos = new HashSet<Contacto>(0);
	private Set<Premio> premios = new HashSet<Premio>(0);
	private Set<RelacionPersona> relacionPersonasForIdPersonaRel = new HashSet<RelacionPersona>(0);
	private Set<Preferencia> preferencias = new HashSet<Preferencia>(0);
	private Set<Escolaridad> escolaridads = new HashSet<Escolaridad>(0);
	private Set<ExperienciaLaboral> experienciaLaborals = new HashSet<ExperienciaLaboral>(0);
	private Set<HistoricoPassword> historicoPasswords = new HashSet<HistoricoPassword>(0);
	private Set<Domicilio> domicilios = new HashSet<Domicilio>(0);
	private Set<Habilidad> habilidads = new HashSet<Habilidad>(0);
	private Set<PersonaPais> personaPaises = new HashSet<PersonaPais>(0);
	private Set<Certificacion> certificacions = new HashSet<Certificacion>(0);
	private Set<Contenido> contenidos = new HashSet<Contenido>(0);
	private Set<RelacionPersona> relacionPersonasForIdPersona = new HashSet<RelacionPersona>(0);
	private Set<DocumentoClasificacion> documentoClasificacions = new HashSet<DocumentoClasificacion>(0);
	private Set<RelacionEmpresaPersona> relacionEmpresaPersonas = new HashSet<RelacionEmpresaPersona>(0);
	private Compensacion compensacion;
	private Set<Referencia> referencias = new HashSet<Referencia>(0);
	private Set<Candidato> candidatos = new HashSet<Candidato>(0);
	private Set<PersonaIdioma> personaIdiomas = new HashSet<PersonaIdioma>(0);
	private Set<PersonaPerfil> personaPerfils = new HashSet<PersonaPerfil>(0);
	private Set<AreaPersona> areaPersonas = new HashSet<AreaPersona>(0);
	private Set<Notificacion> notificacions = new HashSet<Notificacion>(0);
	private Set<Posicion> posicions = new HashSet<Posicion>(0);
	private Set<ControlProceso> controlProcesos = new HashSet<ControlProceso>(0);

	public Persona() {
	}

	public Persona(long idPersona, EstatusInscripcion estatusInscripcion, Date fechaCreacion, boolean sePreClasifica) {
		this.idPersona = idPersona;
		this.estatusInscripcion = estatusInscripcion;
		this.fechaCreacion = fechaCreacion;
		this.sePreClasifica = sePreClasifica;
	}

	public Persona(long idPersona, EstatusEscolar estatusEscolar, TipoEstatusPadres tipoEstatusPadres,
			TipoContrato tipoContrato, TipoConvivencia tipoConvivencia, TipoGenero tipoGenero,
			AmbitoGeografico ambitoGeografico, GradoAcademico gradoAcademico, Mes mes, TipoJornada tipoJornada,
			TipoVivienda tipoVivienda, TipoDispViajar tipoDispViajar, TipoPrestacion tipoPrestacion,
			TipoPersona tipoPersona, EstatusInscripcion estatusInscripcion, SectorEconomico sectorEconomico, EstadoCivil estadoCivil,
			PeriodoEstadoCivil periodoEstadoCivil, String nombre, String apellidoPaterno, String apellidoMaterno,
			String email, Short anioNacimiento, Byte diaNacimiento, Date fechaNacimiento, Long salarioMin,
			Long salarioMax, Boolean permisoTrabajo, Integer numeroHijos, Integer numeroDependientesEconomicos,
			Integer antiguedadDomicilio, Boolean cambioDomicilio, Boolean disponibilidadHorario,
			Long diasExperienciaLaboral, Date fechaCreacion, Date fechaModificacion, String codigoLookAndFeel,
			Boolean clasificado, boolean sePreClasifica, String tokenInicio, Byte edad, String tituloMax, String ultimoPuesto, 
			Short numeroConfirmarInscripcion, Short numeroDebePublicar, Date fechaConfirmarInscripcion,
			Date fechaDebePublicar, Date fechaPublicacion, Set<Contacto> contactos, Set<Premio> premios,
			Set<RelacionPersona> relacionPersonasForIdPersonaRel, Set<Preferencia> preferencias,
			Set<Escolaridad> escolaridads, Set<ExperienciaLaboral> experienciaLaborals,
			Set<HistoricoPassword> historicoPasswords, Set<Domicilio> domicilios, Set<Habilidad> habilidads,
			Set<PersonaPais> personaPaises, Set<Certificacion> certificacions, Set<Contenido> contenidos,
			Set<RelacionPersona> relacionPersonasForIdPersona, Set<DocumentoClasificacion> documentoClasificacions,
			Set<RelacionEmpresaPersona> relacionEmpresaPersonas, Compensacion compensacion, Set<Referencia> referencias,
			Set<Candidato> candidatos, Set<PersonaIdioma> personaIdiomas, Set<PersonaPerfil> personaPerfils,
			Set<AreaPersona> areaPersonas, Set<Notificacion> notificacions, Set<Posicion> posicions,
			Set<ControlProceso> controlProcesos) {
		this.idPersona = idPersona;
		this.estatusEscolar = estatusEscolar;
		this.tipoEstatusPadres = tipoEstatusPadres;
		this.tipoContrato = tipoContrato;
		this.tipoConvivencia = tipoConvivencia;
		this.tipoGenero = tipoGenero;
		this.ambitoGeografico = ambitoGeografico;
		this.gradoAcademico = gradoAcademico;
		this.mes = mes;
		this.tipoJornada = tipoJornada;
		this.tipoVivienda = tipoVivienda;
		this.tipoDispViajar = tipoDispViajar;
		this.tipoPrestacion = tipoPrestacion;
		this.tipoPersona = tipoPersona;
		this.estatusInscripcion = estatusInscripcion;
		this.sectorEconomico=sectorEconomico;
		this.estadoCivil = estadoCivil;
		this.periodoEstadoCivil = periodoEstadoCivil;
		this.nombre = nombre;
		this.apellidoPaterno = apellidoPaterno;
		this.apellidoMaterno = apellidoMaterno;
		this.email = email;
		this.anioNacimiento = anioNacimiento;
		this.diaNacimiento = diaNacimiento;
		this.fechaNacimiento = fechaNacimiento;
		this.salarioMin = salarioMin;
		this.salarioMax = salarioMax;
		this.permisoTrabajo = permisoTrabajo;
		this.numeroHijos = numeroHijos;
		this.numeroDependientesEconomicos = numeroDependientesEconomicos;
		this.antiguedadDomicilio = antiguedadDomicilio;
		this.cambioDomicilio = cambioDomicilio;
		this.disponibilidadHorario = disponibilidadHorario;
		this.diasExperienciaLaboral = diasExperienciaLaboral;
		this.fechaCreacion = fechaCreacion;
		this.fechaModificacion = fechaModificacion;
		this.codigoLookAndFeel = codigoLookAndFeel;
		this.clasificado = clasificado;
		this.sePreClasifica = sePreClasifica;
		this.tokenInicio = tokenInicio;
		this.edad = edad;
		this.tituloMax = tituloMax;
		this.ultimoPuesto=ultimoPuesto;
		this.numeroConfirmarInscripcion = numeroConfirmarInscripcion;
		this.numeroDebePublicar = numeroDebePublicar;
		this.fechaConfirmarInscripcion = fechaConfirmarInscripcion;
		this.fechaDebePublicar = fechaDebePublicar;
		this.fechaPublicacion = fechaPublicacion;
		this.contactos = contactos;
		this.premios = premios;
		this.relacionPersonasForIdPersonaRel = relacionPersonasForIdPersonaRel;
		this.preferencias = preferencias;
		this.escolaridads = escolaridads;
		this.experienciaLaborals = experienciaLaborals;
		this.historicoPasswords = historicoPasswords;
		this.domicilios = domicilios;
		this.habilidads = habilidads;
		this.personaPaises = personaPaises;
		this.certificacions = certificacions;
		this.contenidos = contenidos;
		this.relacionPersonasForIdPersona = relacionPersonasForIdPersona;
		this.documentoClasificacions = documentoClasificacions;
		this.relacionEmpresaPersonas = relacionEmpresaPersonas;
		this.compensacion = compensacion;
		this.referencias = referencias;
		this.candidatos = candidatos;
		this.personaIdiomas = personaIdiomas;
		this.personaPerfils = personaPerfils;
		this.areaPersonas = areaPersonas;
		this.notificacions = notificacions;
		this.posicions = posicions;
		this.controlProcesos = controlProcesos;
	}

	
	@Id
	@SequenceGenerator(name="seq_Persona", sequenceName=Constante.SECUENCIA_BD_PERSONA, initialValue=1, allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="seq_Persona")
	@Column(name = "ID_PERSONA", unique = true, nullable = false)
	public long getIdPersona() {
		return this.idPersona;
	}

	public void setIdPersona(long idPersona) {
		this.idPersona = idPersona;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_TIPO_PRESTACION")
	public TipoPrestacion getTipoPrestacion() {
		return this.tipoPrestacion;
	}

	public void setTipoPrestacion(TipoPrestacion tipoPrestacion) {
		this.tipoPrestacion = tipoPrestacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_TIPO_GENERO")
	public TipoGenero getTipoGenero() {
		return this.tipoGenero;
	}

	public void setTipoGenero(TipoGenero tipoGenero) {
		this.tipoGenero = tipoGenero;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_TIPO_CONVIVENCIA")
	public TipoConvivencia getTipoConvivencia() {
		return this.tipoConvivencia;
	}

	public void setTipoConvivencia(TipoConvivencia tipoConvivencia) {
		this.tipoConvivencia = tipoConvivencia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_TIPO_VIVIENDA")
	public TipoVivienda getTipoVivienda() {
		return this.tipoVivienda;
	}

	public void setTipoVivienda(TipoVivienda tipoVivienda) {
		this.tipoVivienda = tipoVivienda;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_PERIODO_ESTADO_CIVIL")
	public PeriodoEstadoCivil getPeriodoEstadoCivil() {
		return this.periodoEstadoCivil;
	}

	public void setPeriodoEstadoCivil(PeriodoEstadoCivil periodoEstadoCivil) {
		this.periodoEstadoCivil = periodoEstadoCivil;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_AMBITO_GEOGRAFICO")
	public AmbitoGeografico getAmbitoGeografico() {
		return this.ambitoGeografico;
	}

	public void setAmbitoGeografico(AmbitoGeografico ambitoGeografico) {
		this.ambitoGeografico = ambitoGeografico;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_ESTADO_CIVIL")
	public EstadoCivil getEstadoCivil() {
		return this.estadoCivil;
	}

	public void setEstadoCivil(EstadoCivil estadoCivil) {
		this.estadoCivil = estadoCivil;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_ESTATUS_INSCRIPCION", nullable = false)
	public EstatusInscripcion getEstatusInscripcion() {
		return this.estatusInscripcion;
	}

	public void setEstatusInscripcion(EstatusInscripcion estatusInscripcion) {
		this.estatusInscripcion = estatusInscripcion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_SECTOR_ECONOMICO")
	public SectorEconomico getSectorEconomico() {
		return this.sectorEconomico;
	}

	public void setSectorEconomico(SectorEconomico sectorEconomico) {
		this.sectorEconomico = sectorEconomico;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MES_NACIMIENTO")
	public Mes getMes() {
		return this.mes;
	}

	public void setMes(Mes mes) {
		this.mes = mes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_TIPO_ESTATUS_PADRES")
	public TipoEstatusPadres getTipoEstatusPadres() {
		return this.tipoEstatusPadres;
	}

	public void setTipoEstatusPadres(TipoEstatusPadres tipoEstatusPadres) {
		this.tipoEstatusPadres = tipoEstatusPadres;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_TIPO_DISP_VIAJAR")
	public TipoDispViajar getTipoDispViajar() {
		return this.tipoDispViajar;
	}

	public void setTipoDispViajar(TipoDispViajar tipoDispViajar) {
		this.tipoDispViajar = tipoDispViajar;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_GRADO_ACADEMICO_MAX")
	public GradoAcademico getGradoAcademico() {
		return this.gradoAcademico;
	}

	public void setGradoAcademico(GradoAcademico gradoAcademico) {
		this.gradoAcademico = gradoAcademico;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_TIPO_CONTRATO")
	public TipoContrato getTipoContrato() {
		return this.tipoContrato;
	}

	public void setTipoContrato(TipoContrato tipoContrato) {
		this.tipoContrato = tipoContrato;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_ESTATUS_ESCOLAR_MAX")
	public EstatusEscolar getEstatusEscolar() {
		return this.estatusEscolar;
	}

	public void setEstatusEscolar(EstatusEscolar estatusEscolar) {
		this.estatusEscolar = estatusEscolar;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_TIPO_PERSONA")
	public TipoPersona getTipoPersona() {
		return this.tipoPersona;
	}

	public void setTipoPersona(TipoPersona tipoPersona) {
		this.tipoPersona = tipoPersona;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_TIPO_JORNADA")
	public TipoJornada getTipoJornada() {
		return this.tipoJornada;
	}

	public void setTipoJornada(TipoJornada tipoJornada) {
		this.tipoJornada = tipoJornada;
	}

	@Column(name = "NOMBRE", length = 250)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "APELLIDO_PATERNO", length = 250)
	public String getApellidoPaterno() {
		return this.apellidoPaterno;
	}

	public void setApellidoPaterno(String apellidoPaterno) {
		this.apellidoPaterno = apellidoPaterno;
	}

	@Column(name = "APELLIDO_MATERNO", length = 250)
	public String getApellidoMaterno() {
		return this.apellidoMaterno;
	}

	public void setApellidoMaterno(String apellidoMaterno) {
		this.apellidoMaterno = apellidoMaterno;
	}

	@Column(name = "EMAIL", length = 250)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "ANIO_NACIMIENTO")
	public Short getAnioNacimiento() {
		return this.anioNacimiento;
	}

	public void setAnioNacimiento(Short anioNacimiento) {
		this.anioNacimiento = anioNacimiento;
	}

	@Column(name = "DIA_NACIMIENTO")
	public Byte getDiaNacimiento() {
		return this.diaNacimiento;
	}

	public void setDiaNacimiento(Byte diaNacimiento) {
		this.diaNacimiento = diaNacimiento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHA_NACIMIENTO", length = 29)
	public Date getFechaNacimiento() {
		return this.fechaNacimiento;
	}

	public void setFechaNacimiento(Date fechaNacimiento) {
		this.fechaNacimiento = fechaNacimiento;
	}

	@Column(name = "SALARIO_MIN")
	public Long getSalarioMin() {
		return this.salarioMin;
	}

	public void setSalarioMin(Long salarioMin) {
		this.salarioMin = salarioMin;
	}

	@Column(name = "SALARIO_MAX")
	public Long getSalarioMax() {
		return this.salarioMax;
	}

	public void setSalarioMax(Long salarioMax) {
		this.salarioMax = salarioMax;
	}

	@Column(name = "PERMISO_TRABAJO")
	public Boolean getPermisoTrabajo() {
		return this.permisoTrabajo;
	}

	public void setPermisoTrabajo(Boolean permisoTrabajo) {
		this.permisoTrabajo = permisoTrabajo;
	}

	@Column(name = "NUMERO_HIJOS")
	public Integer getNumeroHijos() {
		return this.numeroHijos;
	}

	public void setNumeroHijos(Integer numeroHijos) {
		this.numeroHijos = numeroHijos;
	}

	@Column(name = "NUMERO_DEPENDIENTES_ECONOMICOS")
	public Integer getNumeroDependientesEconomicos() {
		return this.numeroDependientesEconomicos;
	}

	public void setNumeroDependientesEconomicos(
			Integer numeroDependientesEconomicos) {
		this.numeroDependientesEconomicos = numeroDependientesEconomicos;
	}

	@Column(name = "ANTIGUEDAD_DOMICILIO")
	public Integer getAntiguedadDomicilio() {
		return this.antiguedadDomicilio;
	}

	public void setAntiguedadDomicilio(Integer antiguedadDomicilio) {
		this.antiguedadDomicilio = antiguedadDomicilio;
	}

	@Column(name = "CAMBIO_DOMICILIO")
	public Boolean getCambioDomicilio() {
		return this.cambioDomicilio;
	}

	public void setCambioDomicilio(Boolean cambioDomicilio) {
		this.cambioDomicilio = cambioDomicilio;
	}

	@Column(name = "DISPONIBILIDAD_HORARIO")
	public Boolean getDisponibilidadHorario() {
		return this.disponibilidadHorario;
	}

	public void setDisponibilidadHorario(Boolean disponibilidadHorario) {
		this.disponibilidadHorario = disponibilidadHorario;
	}

	@Column(name = "DIAS_EXPERIENCIA_LABORAL")
	public Long getDiasExperienciaLaboral() {
		return this.diasExperienciaLaboral;
	}

	public void setDiasExperienciaLaboral(Long diasExperienciaLaboral) {
		this.diasExperienciaLaboral = diasExperienciaLaboral;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHA_CREACION", nullable = false, length = 29)
	public Date getFechaCreacion() {
		return this.fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHA_MODIFICACION", length = 29)
	public Date getFechaModificacion() {
		return this.fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_publicacion", length = 29)
	public Date getFechaPublicacion() {
		return this.fechaPublicacion;
	}

	public void setFechaPublicacion(Date fechaPublicacion) {
		this.fechaPublicacion = fechaPublicacion;
	}

	@Column(name = "CODIGO_LOOK_AND_FEEL", length = 2500)
	public String getCodigoLookAndFeel() {
		return this.codigoLookAndFeel;
	}

	public void setCodigoLookAndFeel(String codigoLookAndFeel) {
		this.codigoLookAndFeel = codigoLookAndFeel;
	}

	@Column(name = "CLASIFICADO")
	public Boolean getClasificado() {
		return this.clasificado;
	}

	public void setClasificado(Boolean clasificado) {
		this.clasificado = clasificado;
	}

	@Column(name = "TOKEN_INICIO", length = 50)
	public String getTokenInicio() {
		return this.tokenInicio;
	}

	public void setTokenInicio(String tokenInicio) {
		this.tokenInicio = tokenInicio;
	}

	@Column(name = "EDAD")
	public Byte getEdad() {
		return this.edad;
	}

	public void setEdad(Byte edad) {
		this.edad = edad;
	}
	
	@Column(name = "TITULO_MAX", length = 250)
	public String getTituloMax() {
		return this.tituloMax;
	}

	public void setTituloMax(String tituloMax) {
		this.tituloMax = tituloMax;
	}
	
	@Column(name = "ULTIMO_PUESTO", length = 250)
	public String getUltimoPuesto() {
		return this.ultimoPuesto;
	}

	public void setUltimoPuesto(String ultimoPuesto) {
		this.ultimoPuesto = ultimoPuesto;
	}
	
	@Column(name = "numero_confirmar_inscripcion")
	public Short getNumeroConfirmarInscripcion() {
		return this.numeroConfirmarInscripcion;
	}

	public void setNumeroConfirmarInscripcion(Short numeroConfirmarInscripcion) {
		this.numeroConfirmarInscripcion = numeroConfirmarInscripcion;
	}

	@Column(name = "numero_debe_publicar")
	public Short getNumeroDebePublicar() {
		return this.numeroDebePublicar;
	}

	public void setNumeroDebePublicar(Short numeroDebePublicar) {
		this.numeroDebePublicar = numeroDebePublicar;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_confirmar_inscripcion", length = 29)
	public Date getFechaConfirmarInscripcion() {
		return this.fechaConfirmarInscripcion;
	}

	public void setFechaConfirmarInscripcion(Date fechaConfirmarInscripcion) {
		this.fechaConfirmarInscripcion = fechaConfirmarInscripcion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_debe_publicar", length = 29)
	public Date getFechaDebePublicar() {
		return this.fechaDebePublicar;
	}

	public void setFechaDebePublicar(Date fechaDebePublicar) {
		this.fechaDebePublicar = fechaDebePublicar;
	}
	
	@Column(name = "se_pre_clasifica", nullable = false)
	public boolean isSePreClasifica() {
		return this.sePreClasifica;
	}

	public void setSePreClasifica(boolean sePreClasifica) {
		this.sePreClasifica = sePreClasifica;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "persona")
	public Compensacion getCompensacion() {
		return this.compensacion;
	}

	public void setCompensacion(Compensacion compensacion) {
		this.compensacion = compensacion;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "persona")
	public Set<DocumentoClasificacion> getDocumentoClasificacions() {
		return this.documentoClasificacions;
	}

	public void setDocumentoClasificacions(
			Set<DocumentoClasificacion> documentoClasificacionsForIdPersona) {
		this.documentoClasificacions = documentoClasificacionsForIdPersona;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Referencia> getReferencias() {
		return this.referencias;
	}

	public void setReferencias(Set<Referencia> referencias) {
		this.referencias = referencias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personaByIdPersona")
	public Set<RelacionPersona> getRelacionPersonasForIdPersona() {
		return this.relacionPersonasForIdPersona;
	}

	public void setRelacionPersonasForIdPersona(
			Set<RelacionPersona> relacionPersonasForIdPersona) {
		this.relacionPersonasForIdPersona = relacionPersonasForIdPersona;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Notificacion> getNotificacions() {
		return this.notificacions;
	}

	public void setNotificacions(Set<Notificacion> notificacions) {
		this.notificacions = notificacions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personaByIdPersonaRel")
	public Set<RelacionPersona> getRelacionPersonasForIdPersonaRel() {
		return this.relacionPersonasForIdPersonaRel;
	}

	public void setRelacionPersonasForIdPersonaRel(
			Set<RelacionPersona> relacionPersonasForIdPersonaRel) {
		this.relacionPersonasForIdPersonaRel = relacionPersonasForIdPersonaRel;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<PersonaPais> getPersonaPaises() {
		return this.personaPaises;
	}

	public void setPersonaPaises(Set<PersonaPais> personaPaises) {
		this.personaPaises = personaPaises;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Premio> getPremios() {
		return this.premios;
	}

	public void setPremios(Set<Premio> premios) {
		this.premios = premios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<HistoricoPassword> getHistoricoPasswords() {
		return this.historicoPasswords;
	}

	public void setHistoricoPasswords(Set<HistoricoPassword> historicoPasswords) {
		this.historicoPasswords = historicoPasswords;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Candidato> getCandidatos() {
		return this.candidatos;
	}

	public void setCandidatos(Set<Candidato> candidatos) {
		this.candidatos = candidatos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Contacto> getContactos() {
		return this.contactos;
	}

	public void setContactos(Set<Contacto> contactos) {
		this.contactos = contactos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Certificacion> getCertificacions() {
		return this.certificacions;
	}

	public void setCertificacions(Set<Certificacion> certificacions) {
		this.certificacions = certificacions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Escolaridad> getEscolaridads() {
		return this.escolaridads;
	}

	public void setEscolaridads(Set<Escolaridad> escolaridads) {
		this.escolaridads = escolaridads;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<ExperienciaLaboral> getExperienciaLaborals() {
		return this.experienciaLaborals;
	}

	public void setExperienciaLaborals(
			Set<ExperienciaLaboral> experienciaLaborals) {
		this.experienciaLaborals = experienciaLaborals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Contenido> getContenidos() {
		return this.contenidos;
	}

	public void setContenidos(Set<Contenido> contenidos) {
		this.contenidos = contenidos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Domicilio> getDomicilios() {
		return this.domicilios;
	}

	public void setDomicilios(Set<Domicilio> domicilios) {
		this.domicilios = domicilios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<PersonaIdioma> getPersonaIdiomas() {
		return this.personaIdiomas;
	}

	public void setPersonaIdiomas(Set<PersonaIdioma> personaIdiomas) {
		this.personaIdiomas = personaIdiomas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Habilidad> getHabilidads() {
		return this.habilidads;
	}

	public void setHabilidads(Set<Habilidad> habilidads) {
		this.habilidads = habilidads;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Preferencia> getPreferencias() {
		return this.preferencias;
	}

	public void setPreferencias(Set<Preferencia> preferencias) {
		this.preferencias = preferencias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<RelacionEmpresaPersona> getRelacionEmpresaPersonas() {
		return this.relacionEmpresaPersonas;
	}

	public void setRelacionEmpresaPersonas(
			Set<RelacionEmpresaPersona> relacionEmpresaPersonas) {
		this.relacionEmpresaPersonas = relacionEmpresaPersonas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Posicion> getPosicions() {
		return this.posicions;
	}

	public void setPosicions(Set<Posicion> posicions) {
		this.posicions = posicions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<PersonaPerfil> getPersonaPerfils() {
		return this.personaPerfils;
	}

	public void setPersonaPerfils(Set<PersonaPerfil> personaPerfils) {
		this.personaPerfils = personaPerfils;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<ControlProceso> getControlProcesos() {
		return this.controlProcesos;
	}

	public void setControlProcesos(Set<ControlProceso> controlProcesos) {
		this.controlProcesos = controlProcesos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<AreaPersona> getAreaPersonas() {
		return this.areaPersonas;
	}

	public void setAreaPersonas(Set<AreaPersona> areaPersonas) {
		this.areaPersonas = areaPersonas;
	}

	
}
